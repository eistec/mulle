/*
 * Basic stubs of some functions that make no sense in an embedded (statically
 * linked) system.
 */

/*
 * Definition of a pure virtual function, calling this function is an error,
 * should probably include some debug breakpoint.
 */
extern "C" void __cxa_pure_virtual ()
{
    asm volatile ("bkpt #0\n");
    while(1);
}

/*
 * This symbol is used by dynamic shared objects to identify them, but it is
 * somehow pulled in as a dependency by the compiler-generated global (static)
 * constructor code.
 */
void * __dso_handle = 0;

/*
 * Register a function to be called by exit or when a shared library
 * is unloaded. not really used on an embedded system where you pull the
 * power to shut down the program.
 *
 * This is only called by code automatically generated by the C++ compiler.
 *
 * Return value: 0 on success, non-zero on failure.
 */
extern "C" int
__cxa_atexit (void (*) (void *), void *, void *)
{
  /* We just pretend everything is dandy. */
  return 0;
}
